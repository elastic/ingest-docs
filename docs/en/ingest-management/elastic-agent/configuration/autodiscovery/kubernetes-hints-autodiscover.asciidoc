[[hints-annotations-autodiscovery]]
= Hints annotations based autodiscover

beta[]

NOTE: Make sure you are using {agent} 8.5+.

NOTE: Hints autodiscovery only works with {agent} Standalone.

Standalone {agent} supports autodiscover based on hints from the <<kubernetes-provider,provider>>.
The hints mechanism looks for hints in Kubernetes Pod annotations that have the prefix `co.elastic.hints`.
As soon as the container starts, {agent} checks it for hints and launches the proper configuration
for the container. Hints tell {agent} how to monitor the container by using the proper integration.
This is the full list of supported hints:

[discrete]
== Required hints:

[float]
=== `co.elastic.hints/package`

The package to use for monitoring.

[float]
=== `co.elastic.hints/host`

The host to use for metrics retrieval.

[discrete]
== Optional hints available:

[float]
=== `co.elastic.hints/data_stream`

The list of data streams to enable. If not specified, the integration's default data streams are used. To find the defaults, refer to the {integrations-docs}[Elastic integrations documentation].

If data streams are specified, additional hints can be defined per data stream. For example, `co.elastic.hints/info.period: 5m` if the data stream specified is `info` for the {metricbeat-ref}/metricbeat-module-redis.html[Redis module].

[source,yaml]
----
apiVersion: v1
kind: Pod
metadata:
  name: redis
  annotations:
    co.elastic.hints/package: redis
    co.elastic.hints/data_streams: info
    co.elastic.hints/info.period: 5m
----

If data stream hints are not specified, the top level hints will be used in its configuration.

[float]
=== `co.elastic.hints/metrics_path`

The path to retrieve the metrics from.

[float]
=== `co.elastic.hints/period`

The time interval for metrics retrieval, for example, 10s.

[float]
=== `co.elastic.hints/timeout`

Metrics retrieval timeout, for example, 3s.

[float]
=== `co.elastic.hints/username`

The username to use for authentication.

[float]
=== `co.elastic.hints/password`

The password to use for authentication. It is recommended to retrieve this sensitive information from an ENV variable
and avoid placing passwords in plain text.

[float]
=== `co.elastic.hints/stream`

The stream to use for logs collection, for example, stdout/stderr.

If the specified package has no logs support, a generic container's logs input will be used as a fallback. See the `Hints autodiscovery for kubernetes log collection` example below.

[discrete]
== Available packages that support hints autodiscovery

The available packages that are supported through hints can be found
https://github.com/elastic/elastic-agent/tree/main/deploy/kubernetes/elastic-agent-standalone/templates.d[here].

[discrete]
== Configure hints autodiscovery

To enable hints autodiscovery, you must add `hints.enabled: true` to the provider's configuration:

[source,yaml]
----
providers:
  kubernetes:
    hints.enabled: true
----

Then ensure that the proper volumes and volumeMounts are specified by uncommenting the appropriate sections in the {agent} manifest:

[source,yaml]
----
volumeMounts:
- name: external-inputs
  mountPath: /etc/elastic-agent/inputs.d
...
volumes:
- name: external-inputs
  emptyDir: {}
...
----

An init container is also required to download the hints templates.
The init container is already defined, so uncomment the respective section:

["source", "yaml", subs="attributes"]
----
initContainers:
- name: k8s-templates-downloader
  image: busybox:1.28
  command: ['sh']
  args:
    - -c
    - >-
      mkdir -p /etc/elastic-agent/inputs.d &&
      wget -O - https://github.com/elastic/elastic-agent/archive/{branch}.tar.gz | tar xz -C /etc/elastic-agent/inputs.d --strip=5 "elastic-agent-{branch}/deploy/kubernetes/elastic-agent-standalone/templates.d"
  volumeMounts:
    - name: external-inputs
      mountPath: /etc/elastic-agent/inputs.d
----


NOTE: The {agent} can load multiple configuration files from `{path.config}/inputs.d`  and finally produce a unified one (refer to <<elastic-agent-configuration>>). Users have the ability to manually mount their own templates under `/etc/elastic-agent/inputs.d` *if they want to skip enabling initContainers section*.


[discrete]
== Examples: 

[discrete]
=== Hints autodiscovery for redis

Enabling hints allows users deploying Pods on the cluster to automatically turn on Elastic
monitoring at Pod deployment time.
For example, to deploy a Redis Pod on the cluster and automatically enable Elastic monitoring, add the proper hints as annotations on the Pod manifest file:

[source,yaml]
----
...
apiVersion: v1
kind: Pod
metadata:
  name: redis
  annotations:
    co.elastic.hints/package: redis
    co.elastic.hints/data_streams: info
    co.elastic.hints/host: '${kubernetes.pod.ip}:6379'
    co.elastic.hints/info.period: 5s
  labels:
    k8s-app: redis
    app: redis
...
----

After deploying this Pod, the data will start flowing in automatically. You can find it on the index `metrics-redis.info-default`.

NOTE: All assets (dashboards, ingest pipelines, and so on) related to the Redis integration are not installed. You need to explicitly <<install-uninstall-integration-assets,install them through {kib}>>.


[discrete]
=== Hints autodiscovery for kubernetes log collection

The log collection for Kubernetes autodiscovered pods can be supported by using  https://github.com/elastic/elastic-agent/tree/main/deploy/kubernetes/elastic-agent-standalone/templates.d/container_logs.yml[container_logs.yml template]. Elastic Agent needs to emit a container_logs mapping so as to start collecting logs for all the discovered containers *even if no annotations are present in the containers*. 

1. Follow steps described above to enable Hints Autodiscover
2. Make sure that relevant `container_logs.yml` template will be mounted under /etc/elastic-agent/inputs.d/ folder of Elastic Agent
3. Deploy Elastic Agent Manifest
4. Elastic Agent should be able to discover all containers inside kuernetes cluster and to collect available logs.

The previous default behaviour can be disabled with `hints.default_container_logs: false`. 
So this will disable the automatic logs collection from all discovered pods. Users need specifically to annotate their pod with following annotations:

[source,yaml]
----
annotations:
  co.elastic.hints/package: "container_logs"
----


[source,yaml]
----
providers.kubernetes:
  node: ${NODE_NAME}
  scope: node
  hints:
    enabled: true
    default_container_logs: false 
...
----

In the following sample nginx manifest, we will additionally provide specific stream annotation, in order to configure the filestream input to read only stderr stream:

[source,yaml]
----
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        co.elastic.hints/package: "container_logs"
        co.elastic.hints/stream: "stderr"
    spec:
      containers:
      - image: nginx
        name: nginx
...
----

Users can monitor the final rendered Elastic Agent configuration:

[source,bash]
----
kubectl exec -ti -n kube-system elastic-agent-7fkzm -- bash


/usr/share/elastic-agent# /elastic-agent inspect -v --variables --variables-wait 2s

inputs:
- data_stream.namespace: default
  id: hints-container-logs-3f69573a1af05c475857c1d0f98fc55aa01b5650f146d61e9653a966cd50bd9c-kubernetes-1780aca0-3741-4c8c-aced-b9776ba3fa81.nginx
  name: filestream-generic
  original_id: hints-container-logs-3f69573a1af05c475857c1d0f98fc55aa01b5650f146d61e9653a966cd50bd9c
  [output truncated ....]
  streams:
  - data_stream:
      dataset: kubernetes.container_logs
      type: logs
    exclude_files: []
    exclude_lines: []
    parsers:
    - container:
        format: auto
        stream: stderr
    paths:
    - /var/log/containers/*3f69573a1af05c475857c1d0f98fc55aa01b5650f146d61e9653a966cd50bd9c.log
    prospector:
      scanner:
        symlinks: true
    tags: []
  type: filestream
  use_output: default
outputs:
  default:
    hosts:
    - https://elasticsearch:9200
    password: changeme
    type: elasticsearch
    username: elastic
providers:
  kubernetes:
    hints:
      default_container_logs: false
      enabled: true
    node: control-plane
    scope: node
----


[discrete]
== Troubleshooting

When things do not work as expected, you may need to troubleshoot your setup. Here we provide some directions to speed up your investigation:

. Exec inside an Agent's Pod and run the `inspect` command to verify how inputs are constructed dynamically:
+
["source", "sh", subs="attributes"]
------------------------------------------------
./elastic-agent inspect --variables --variables-wait 1s -c /etc/elastic-agent/agent.yml
------------------------------------------------
+
Specifically, examine how the inputs are being populated.

. View the {agent} logs:
+
["source", "sh", subs="attributes"]
------------------------------------------------
tail -f /etc/elastic-agent/data/logs/elastic-agent-*.ndjson
------------------------------------------------
+
Verify that the hints feature is enabled in the config and look for hints-related logs like:
"Generated hints mappings are ..."
In these logs, you can find the mappings that are extracted out of the annotations and determine if the values can populate a specific input.

. View the {metricbeat} logs:
+
["source", "sh", subs="attributes"]
------------------------------------------------
tail -f /etc/elastic-agent/data/logs/default/metricbeat-*.ndjson
------------------------------------------------

. View the {filebeat} logs:
+
["source", "sh", subs="attributes"]
------------------------------------------------
tail -f /etc/elastic-agent/data/logs/default/filebeat-*.ndjson
------------------------------------------------

. View the target input template. For the Redis example:
+
["source", "sh", subs="attributes"]
------------------------------------------------
cat f /etc/elastic-agent/inputs.d/redis.yml
------------------------------------------------
