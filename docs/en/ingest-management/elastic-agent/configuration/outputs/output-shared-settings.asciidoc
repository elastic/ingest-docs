// These settings are shared across the docs for multiple outputs. 

// =============================================================================

// tag::compression_level-setting[]
|
[id="{type}-compression_level-setting"]
`compression_level`

| (int) The gzip compression level. Set this value to `0` to disable compression.
The compression level must be in the range of `1` (best speed) to `9` (best
compression).

Increasing the compression level reduces network usage but increases CPU usage.

// Default varies by output
// end::compression_level-setting[]

// =============================================================================

// tag::enabled-setting[]
|
[id="{type}-enabled-setting"]
`enabled`

| (boolean) Enables or disables the output. If set to `false`, the output is
disabled.

// end::enabled-setting[]

// =============================================================================

// tag::escape_html-setting[]
|
[id="{type}-escape_html-setting"]
`escape_html`

| (boolean) Configures escaping of HTML in strings. Set to `true` to enable
escaping.

*Default:* `false`
// end::escape_html-setting[]

// =============================================================================

// tag::queue.mem.events-setting[]
|
[id="{type}-queue.mem.events-setting"]
`queue.mem.events`

| The number of events the queue can store. This value should be evenly divisible by `queue.mem.flush.min_events` to avoid sending partial batches to the output.

*Default:* `3200 events`
// end::queue.mem.events-setting[]

// =============================================================================

// tag::queue.mem.flush.min_events-setting[]
|
[id="{type}-queue.mem.flush.min_events-setting"]
`queue.mem.flush.min_events`

| The minimum number of events required for publishing. If this value is set to 0 or 1, events are available to the output immediately. If this value is greater than 1 the output must wait for the queue to accumulate this minimum number of events or for `queue.mem.flush.timeout` to expire before publishing. When greater than 1 this value also defines the maximum possible batch that can be sent by the output.

*Default:* `1600 events`
// end::queue.mem.flush.min_events-setting[]

// =============================================================================

// tag::queue.mem.flush.timeout-setting[]
|
[id="{type}-queue.mem.flush.timeout-setting"]
`queue.mem.flush.timeout`

| (int) The maximum wait time for `queue.mem.flush.min_events` to be fulfilled. If set to 0s, events are available to the output immediately.

*Default:* `10s`
// end::queue.mem.flush.timeout-setting[]

// =============================================================================

// tag::worker-setting[]
|
[id="{type}-worker-setting"]
`worker`

| (int) The number of workers per configured host publishing events. 
This is best used with load balancing mode enabled. Example: If
you have two hosts and three workers, in total six workers are started (three
for each host).

*Default:* `1`
// end::worker-setting[]

// =============================================================================

