[[otel-agent-configuration]]
= {agent} OTel configuration

preview::[]

When running in `otel` mode, {agent} supports a standard OTel Collector configuration. 

You can provide the OTel configuration to {agent} using any of the following four schemes:

* `file` - The configuration is read from a file. For example, `file:path/to/config.yaml`.
* `env` - The configuration is read from an environment variable. For example, `env:MY_CONFIG_IN_AN_ENVVAR`.
* `yaml` - The configuration is read from a standard YAML-formatted file. For example, `yaml:exporters::debug::verbosity: detailed`.
* `http` - The configuration is read from an HTTP URL. For example, `http://www.example.com/config.yaml`.

For example, the following runs {agent} in `otel` mode, passing the OTel configuration as an HTTP URL:

[source,shell]
----
./elastic-agent otel --config=http://localhost:8000/config.yaml
----

To help you get started, when you download an {agent} install package, the package comes with a sample OTel configuration file, `otel.yml` located in the package base directory.

[source,shell]
----
receivers: <1>
  filelog:
    include: [ /var/log/system.log ]
    start_at: beginning

processors: <2>
  resource:
    attributes:
    - key: service.name
      action: insert
      value: elastic-otel-test

exporters: <3>
  debug:
    verbosity: detailed
    sampling_initial: 10000
    sampling_thereafter: 10000

extensions: <4>
  memory_limiter:
    check_interval: 1s
    limit_mib: 700
    spike_limit_mib: 180

service: <5>
  pipelines:
    logs:
      receivers: [filelog]
      processors: [resource]
      exporters:
        - debug
----

<1> link:https://opentelemetry.io/docs/collector/configuration/#receivers[Receivers] collect telemetry from one or more sources.
<2> link:https://opentelemetry.io/docs/collector/configuration/#processors[Processors] take the data collected by receivers and modify or transform it before sending it to the exporters.
<3> link:https://opentelemetry.io/docs/collector/configuration/#exporters[Exporters] send data to one or more backends or destinations.
<4> link:https://opentelemetry.io/docs/collector/configuration/#extensions[Extensions] are optional components that expand the capabilities of the Collector to accomplish tasks not directly involved with processing telemetry data. 
<5> The link:https://opentelemetry.io/docs/collector/configuration/#connectors[Service] section is used to configure what components are enabled in the Collector based on the configuration found in the receivers, processors, exporters, and extensions sections. If a component is configured, but not defined within the service section, then it's not enabled.

For full details about setting up this file, refer to link:https://opentelemetry.io/docs/collector/configuration/[Configuration] in the OpenTelemetry documentation.