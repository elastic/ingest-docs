:type: output-logstash-fleet-settings

[[ls-output-settings]]
= {ls} output settings

Specify these settings to send data over a secure connection to {ls}. You must
also configure a {ls} pipeline that reads encrypted data from {agent}s and sends
the data to {es}. Follow the in-product steps to configure the {ls} pipeline.

In the {fleet} <<output-settings,Output settings>>, make sure that the {ls} output type is selected.

Before using the {ls} output, you need to make sure that for any integrations that have been <<add-integration-to-policy,added to your {agent} policy>>, the integration assets have been installed on the destination cluster. Refer to <<install-uninstall-integration-assets,Install and uninstall {agent} integration assets>> for the steps to add integration assets.

To learn how to generate certificates, refer to <<secure-logstash-connections>>.

[cols="2*<a"]
|===
|
[id="ls-logstash-hosts"]
**{ls} hosts**

| The addresses your {agent}s will use to connect to {ls}. Use the format
`host:port`. Click **add** row to specify additional {ls} addresses.

**Examples:**

* `192.0.2.0:5044`
* `mylogstashhost:5044`

Refer to the <<fleet-server,{fleet-server}>> documentation for default ports and other configuration details.

// =============================================================================

|
[id="ls-server-ssl-certificate-authorities-setting"]
**Server SSL certificate authorities**

| The CA certificate to use to connect to {ls}. This is the CA used to generate
the certificate and key for {ls}. Copy and paste in the full contents for the CA
certificate.

This setting is optional.

// =============================================================================

|
[id="ls-client-ssl-certificate-setting"]
**Client SSL certificate**

| The certificate generated for the client. Copy and paste in the full contents
of the certificate. This is the certificate that all the agents will use to connect to {ls}.

In cases where each client has a unique certificate, the local path to that certificate can be
placed here. The agents will pick the certificate in that location when establishing a connection to
{ls}.

// =============================================================================

|
[id="ls-client-ssl-certificate-key-setting"]
**Client SSL certificate key**

| The private key generated for the client. This must be in PKCS 8 key.
Copy and paste in the full contents of the certificate key. This is the certificate key that all the agents will use to connect to {ls}.

In cases where each client has a unique certificate key, the local path to that certificate key can be placed here.
The agents will pick the certificate key in that location when establishing a connection to {ls}.

To prevent unauthorized access the certificate key is stored as a secret value. While secret storage is recommended, you can choose to override this setting and store the key as plain text in the agent policy definition. Secret storage requires {fleet-server} version 8.12 or higher.

Note that this setting can also be stored as a secret value or as plain text for preconfigured outputs. See {kibana-ref}/fleet-settings-kb.html#_preconfiguration_settings_for_advanced_use_cases[Preconfiguration settings] in the {kib} Guide to learn more.

// =============================================================================

|
[id="ls-agent-proxy-output"]
**Proxy**

| Select a proxy URL for {agent} to connect to {ls}.
To learn about proxy configuration, refer to <<fleet-agent-proxy-support>>.

// =============================================================================

|
[id="ls-output-advanced-yaml-setting"]
**Advanced YAML configuration**

| YAML settings that will be added to the {ls} output section of each policy
that uses this output. Make sure you specify valid YAML. The UI does not
currently provide validation.

See <<ls-output-settings-yaml-config>> for descriptions of the available settings.

// =============================================================================

|
[id="ls-agent-integrations-output"]
**Make this output the default for agent integrations**

| When this setting is on, {agent}s use this output to send data if no other
output is set in the <<agent-policy,agent policy>>.

Output to {ls} is not supported for agent integrations in a policy used by {fleet-server} or APM.

// =============================================================================

|
[id="ls-agent-monitoring-output"]
**Make this output the default for agent monitoring**

| When this setting is on, {agent}s use this output to send <<monitor-elastic-agent,agent monitoring data>> if no other output is set in the <<agent-policy,agent policy>>.

Output to {ls} is not supported for agent monitoring in a policy used by {fleet-server} or APM.

|===


[[ls-output-settings-yaml-config]]
== Advanced YAML configuration

[cols="2*<a"]
|===
| Setting | Description

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=backoff.init-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=backoff.max-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=bulk_max_size-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=compression_level-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=escape_html-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=events-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=flush.min_events-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=flush.timeout-setting]

// =============================================================================

// tag::index-setting[]
|
[id="{type}-index-setting"]
`index`

| (string) The index root name to write events to.
// end::index-setting[]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=loadbalance-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=max_retries-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=pipelining-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=proxy_use_local_resolver-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=slow_start-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=timeout-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-logstash.asciidoc[tag=ttl-setting]

// =============================================================================

include::../elastic-agent/configuration/outputs/output-shared-settings.asciidoc[tag=worker-setting]

|===

:type!: